eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiSW50ZWdyYXRpb25BY2Nlc3NUb2tlbiIsInZlcnNpb24iOiIxLjAiLCJpbnRlZ3JhdGlvbklkIjo4NDksInVzZXJJZCI6NzgxMTMsImFjY2Vzc1Rva2VuU2VjcmV0IjoiMTI2NmExNGMwNzRjMDg0ODE1ZWYxZmY3MmVjOGM0M2ZkNTVjYzZhOTVhOTVlYjY5ZTE5NGM1MDZmODBkMWZlNSIsImlhdCI6MTcwMjcyNTk2NH0.5gsB981q1q52SrTWaa3QSAn6Y1uWjD7OrP7ACLQ98GU




 const { hasPermission, requestPermission } = useCameraPermission();
  const [isGranted, setIsGranted] = useState(false);
  const device = useCameraDevice("back");

  async function getPermission() {
    await requestPermission();

    if (hasPermission) {
      setIsGranted(true);
    }
  }

  if (device == null) return <>NO camera</>;

<View>
      {device != null && isGranted && (
        <Camera device={device} isActive={true} />
      )}

      <TouchableOpacity onPress={getPermission}>
        <Text>baci</Text>
      </TouchableOpacity>
    </View>